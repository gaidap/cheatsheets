{"ast":null,"code":"Prism.languages.scheme = {\n  comment: /;.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n    greedy: !0\n  },\n  symbol: {\n    pattern: /'[^()#'\\s]+/,\n    greedy: !0\n  },\n  character: {\n    pattern: /#\\\\(?:[ux][a-fA-F\\d]+|[-a-zA-Z]+|\\S)/,\n    greedy: !0,\n    alias: \"string\"\n  },\n  \"lambda-parameter\": [{\n    pattern: /(\\(lambda\\s+)[^()'\\s]+/,\n    lookbehind: !0\n  }, {\n    pattern: /(\\(lambda\\s+\\()[^()']+/,\n    lookbehind: !0\n  }],\n  keyword: {\n    pattern: /(\\()(?:define(?:-library|-macro|-syntax|-values)?|defmacro|(?:case-)?lambda|let(?:(?:\\*|rec)?(?:-values)?|-syntax|rec-syntax)|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-(?:case|rules))(?=[()\\s]|$)/,\n    lookbehind: !0\n  },\n  builtin: {\n    pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s]|$)/,\n    lookbehind: !0\n  },\n  number: {\n    pattern: /(^|[\\s()])(?:(?:#d(?:#[ei])?|#[ei](?:#d)?)?[+-]?(?:(?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?|\\d+\\/\\d+)(?:[+-](?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?|\\d+\\/\\d+)i)?|(?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?|\\d+\\/\\d+)i)|(?:#[box](?:#[ei])?|#[ei](?:#[box])?)[+-]?(?:[\\da-fA-F]+(?:\\/[\\da-fA-F]+)?(?:[+-][\\da-fA-F]+(?:\\/[\\da-fA-F]+)?i)?|[\\da-fA-F]+(?:\\/[\\da-fA-F]+)?i))(?=[()\\s]|$)/,\n    lookbehind: !0\n  },\n  boolean: {\n    pattern: /(^|[\\s()])#[ft](?=[()\\s]|$)/,\n    lookbehind: !0\n  },\n  operator: {\n    pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=[()\\s]|$)/,\n    lookbehind: !0\n  },\n  function: {\n    pattern: /(\\()[^()'\\s]+(?=[()\\s]|$)/,\n    lookbehind: !0\n  },\n  punctuation: /[()']/\n};","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/node_modules/prismjs/components/prism-scheme.min.js"],"names":["Prism","languages","scheme","comment","string","pattern","greedy","symbol","character","alias","lookbehind","keyword","builtin","number","boolean","operator","function","punctuation"],"mappings":"AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAuB;AAACC,EAAAA,OAAO,EAAC,KAAT;AAAeC,EAAAA,MAAM,EAAC;AAACC,IAAAA,OAAO,EAAC,mBAAT;AAA6BC,IAAAA,MAAM,EAAC,CAAC;AAArC,GAAtB;AAA8DC,EAAAA,MAAM,EAAC;AAACF,IAAAA,OAAO,EAAC,aAAT;AAAuBC,IAAAA,MAAM,EAAC,CAAC;AAA/B,GAArE;AAAuGE,EAAAA,SAAS,EAAC;AAACH,IAAAA,OAAO,EAAC,sCAAT;AAAgDC,IAAAA,MAAM,EAAC,CAAC,CAAxD;AAA0DG,IAAAA,KAAK,EAAC;AAAhE,GAAjH;AAA2L,sBAAmB,CAAC;AAACJ,IAAAA,OAAO,EAAC,wBAAT;AAAkCK,IAAAA,UAAU,EAAC,CAAC;AAA9C,GAAD,EAAkD;AAACL,IAAAA,OAAO,EAAC,wBAAT;AAAkCK,IAAAA,UAAU,EAAC,CAAC;AAA9C,GAAlD,CAA9M;AAAkTC,EAAAA,OAAO,EAAC;AAACN,IAAAA,OAAO,EAAC,+OAAT;AAAyPK,IAAAA,UAAU,EAAC,CAAC;AAArQ,GAA1T;AAAkkBE,EAAAA,OAAO,EAAC;AAACP,IAAAA,OAAO,EAAC,2NAAT;AAAqOK,IAAAA,UAAU,EAAC,CAAC;AAAjP,GAA1kB;AAA8zBG,EAAAA,MAAM,EAAC;AAACR,IAAAA,OAAO,EAAC,sVAAT;AAAgWK,IAAAA,UAAU,EAAC,CAAC;AAA5W,GAAr0B;AAAorCI,EAAAA,OAAO,EAAC;AAACT,IAAAA,OAAO,EAAC,6BAAT;AAAuCK,IAAAA,UAAU,EAAC,CAAC;AAAnD,GAA5rC;AAAkvCK,EAAAA,QAAQ,EAAC;AAACV,IAAAA,OAAO,EAAC,yCAAT;AAAmDK,IAAAA,UAAU,EAAC,CAAC;AAA/D,GAA3vC;AAA6zCM,EAAAA,QAAQ,EAAC;AAACX,IAAAA,OAAO,EAAC,2BAAT;AAAqCK,IAAAA,UAAU,EAAC,CAAC;AAAjD,GAAt0C;AAA03CO,EAAAA,WAAW,EAAC;AAAt4C,CAAvB","sourcesContent":["Prism.languages.scheme={comment:/;.*/,string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},symbol:{pattern:/'[^()#'\\s]+/,greedy:!0},character:{pattern:/#\\\\(?:[ux][a-fA-F\\d]+|[-a-zA-Z]+|\\S)/,greedy:!0,alias:\"string\"},\"lambda-parameter\":[{pattern:/(\\(lambda\\s+)[^()'\\s]+/,lookbehind:!0},{pattern:/(\\(lambda\\s+\\()[^()']+/,lookbehind:!0}],keyword:{pattern:/(\\()(?:define(?:-library|-macro|-syntax|-values)?|defmacro|(?:case-)?lambda|let(?:(?:\\*|rec)?(?:-values)?|-syntax|rec-syntax)|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-(?:case|rules))(?=[()\\s]|$)/,lookbehind:!0},builtin:{pattern:/(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s]|$)/,lookbehind:!0},number:{pattern:/(^|[\\s()])(?:(?:#d(?:#[ei])?|#[ei](?:#d)?)?[+-]?(?:(?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?|\\d+\\/\\d+)(?:[+-](?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?|\\d+\\/\\d+)i)?|(?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?|\\d+\\/\\d+)i)|(?:#[box](?:#[ei])?|#[ei](?:#[box])?)[+-]?(?:[\\da-fA-F]+(?:\\/[\\da-fA-F]+)?(?:[+-][\\da-fA-F]+(?:\\/[\\da-fA-F]+)?i)?|[\\da-fA-F]+(?:\\/[\\da-fA-F]+)?i))(?=[()\\s]|$)/,lookbehind:!0},boolean:{pattern:/(^|[\\s()])#[ft](?=[()\\s]|$)/,lookbehind:!0},operator:{pattern:/(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=[()\\s]|$)/,lookbehind:!0},function:{pattern:/(\\()[^()'\\s]+(?=[()\\s]|$)/,lookbehind:!0},punctuation:/[()']/};"]},"metadata":{},"sourceType":"script"}