{"ast":null,"code":"import axios from 'axios';\nimport localForage from 'localforage';\nconst fileCache = localForage.createInstance({\n  name: 'filecache'\n});\nexport const fetchPkgPlugin = userInput => {\n  return {\n    name: 'fetchpkg-plugin',\n\n    setup(build) {\n      build.onLoad({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          loader: 'jsx',\n          contents: userInput\n        };\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        const cacheHit = await fileCache.getItem(args.path);\n\n        if (cacheHit) {\n          return cacheHit;\n        }\n      });\n      build.onLoad({\n        filter: /.css$/\n      }, async args => {\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const escaped = data.replace(/\\n/g, '').replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\"); // Little hack to pipe imported css into a head tag to load it onto the screen\n\n        const content = ` \n                    const style = document.createElement('style');\n                    style.innerText = '${escaped}';\n                    document.head.appendChild(style);\n                    `;\n        const result = {\n          loader: 'jsx',\n          contents: content,\n          // extract base dir for imported file, e.g. http://.../test-pkg/src/index.js -> /test-pkg/src\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const result = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/src/bundler/plugins/fetchpkg-plugin.ts"],"names":["axios","localForage","fileCache","createInstance","name","fetchPkgPlugin","userInput","setup","build","onLoad","filter","loader","contents","args","cacheHit","getItem","path","data","request","get","escaped","replace","content","result","resolveDir","URL","responseURL","pathname","setItem"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAACE,cAAZ,CAA2B;AAC3CC,EAAAA,IAAI,EAAE;AADqC,CAA3B,CAAlB;AAIA,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAuB;AACrD,SAAO;AACLF,IAAAA,IAAI,EAAE,iBADD;;AAELG,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAClCA,MAAAA,KAAK,CAACC,MAAN,CAAa;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA0C,MAAM;AAC9C,eAAO;AACLC,UAAAA,MAAM,EAAE,KADH;AAELC,UAAAA,QAAQ,EAAEN;AAFL,SAAP;AAID,OALD;AAOAE,MAAAA,KAAK,CAACC,MAAN,CAAa;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA+B,MAAOG,IAAP,IAAqB;AAClD,cAAMC,QAAQ,GAAG,MAAMZ,SAAS,CAACa,OAAV,CAAwCF,IAAI,CAACG,IAA7C,CAAvB;;AACA,YAAIF,QAAJ,EAAc;AACZ,iBAAOA,QAAP;AACD;AACF,OALD;AAOAN,MAAAA,KAAK,CAACC,MAAN,CAAa;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb,EAAkC,MAAOG,IAAP,IAAqB;AACrD,cAAM;AAACI,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAkB,MAAMlB,KAAK,CAACmB,GAAN,CAAUN,IAAI,CAACG,IAAf,CAA9B;AACA,cAAMI,OAAO,GAAGH,IAAI,CACnBI,OADe,CACP,KADO,EACA,EADA,EAEfA,OAFe,CAEP,IAFO,EAED,KAFC,EAGfA,OAHe,CAGP,IAHO,EAGD,KAHC,CAAhB,CAFqD,CAMrD;;AACA,cAAMC,OAAO,GAAI;AACrB;AACA,yCAAyCF,OAAQ;AACjD;AACA,qBAJI;AAKA,cAAMG,MAAmC,GAAG;AAC1CZ,UAAAA,MAAM,EAAE,KADkC;AAE1CC,UAAAA,QAAQ,EAAEU,OAFgC;AAG1C;AACAE,UAAAA,UAAU,EAAE,IAAIC,GAAJ,CAAQ,IAAR,EAAcP,OAAO,CAACQ,WAAtB,EAAmCC;AAJL,SAA5C;AAMA,cAAMzB,SAAS,CAAC0B,OAAV,CAAkBf,IAAI,CAACG,IAAvB,EAA6BO,MAA7B,CAAN;AACA,eAAOA,MAAP;AACD,OApBD;AAsBAf,MAAAA,KAAK,CAACC,MAAN,CAAa;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA+B,MAAOG,IAAP,IAAqB;AAClD,cAAM;AAACI,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAkB,MAAMlB,KAAK,CAACmB,GAAN,CAAUN,IAAI,CAACG,IAAf,CAA9B;AACA,cAAMO,MAAmC,GAAG;AAC1CZ,UAAAA,MAAM,EAAE,KADkC;AAE1CC,UAAAA,QAAQ,EAAEK,IAFgC;AAG1CO,UAAAA,UAAU,EAAE,IAAIC,GAAJ,CAAQ,IAAR,EAAcP,OAAO,CAACQ,WAAtB,EAAmCC;AAHL,SAA5C;AAKA,cAAMzB,SAAS,CAAC0B,OAAV,CAAkBf,IAAI,CAACG,IAAvB,EAA6BO,MAA7B,CAAN;AACA,eAAOA,MAAP;AACD,OATD;AAUC;;AAjDI,GAAP;AAmDC,CApDM","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localForage from 'localforage';\n\nconst fileCache = localForage.createInstance({\n  name: 'filecache'\n});\n\nexport const fetchPkgPlugin = (userInput: string) => {\nreturn {\n  name: 'fetchpkg-plugin',\n  setup(build: esbuild.PluginBuild) {\n  build.onLoad({ filter: /(^index\\.js$)/ }, () => {\n    return {\n      loader: 'jsx',\n      contents: userInput,\n    };\n  });\n\n  build.onLoad({ filter: /.*/ }, async (args: any) => {\n    const cacheHit = await fileCache.getItem<esbuild.OnLoadResult>(args.path);\n    if (cacheHit) {\n      return cacheHit;\n    }\n  });\n\n  build.onLoad({ filter: /.css$/ }, async (args: any) => {\n    const {data, request} = await axios.get(args.path);    \n    const escaped = data\n    .replace(/\\n/g, '')\n    .replace(/\"/g, '\\\\\"')\n    .replace(/'/g, \"\\\\'\");\n    // Little hack to pipe imported css into a head tag to load it onto the screen\n    const content = ` \n                    const style = document.createElement('style');\n                    style.innerText = '${escaped}';\n                    document.head.appendChild(style);\n                    `;\n    const result: esbuild.OnLoadResult | null = {\n      loader: 'jsx',\n      contents: content,\n      // extract base dir for imported file, e.g. http://.../test-pkg/src/index.js -> /test-pkg/src\n      resolveDir: new URL('./', request.responseURL).pathname  \n    };\n    await fileCache.setItem(args.path, result);\n    return result;\n  });\n\n  build.onLoad({ filter: /.*/ }, async (args: any) => {\n    const {data, request} = await axios.get(args.path);     \n    const result: esbuild.OnLoadResult | null = {\n      loader: 'jsx',\n      contents: data,\n      resolveDir: new URL('./', request.responseURL).pathname  \n    };\n    await fileCache.setItem(args.path, result);\n    return result;\n  });\n  }\n};\n};"]},"metadata":{},"sourceType":"module"}