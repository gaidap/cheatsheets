{"ast":null,"code":"var _jsxFileName = \"/home/pac/cheatsheets/packages/local-client/src/components/CellList.tsx\",\n    _s = $RefreshSig$();\n\nimport './CellList.css';\nimport { Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport CellAdder from './CellAdder';\nimport CellListItem from './CellListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellList = () => {\n  _s();\n\n  const cells = useTypedSelector(({\n    cells: {\n      order,\n      data\n    }\n  }) => order.map(id => data[id]));\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CellListItem, {\n      cell: cell\n    }, cell.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CellAdder, {\n      previousCellId: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, cell.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list\",\n    children: [/*#__PURE__*/_jsxDEV(CellAdder, {\n      forceVisible: cells.length === 0,\n      previousCellId: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), renderedCells]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/src/components/CellList.tsx"],"names":["Fragment","useTypedSelector","CellAdder","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell","length"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,KAAK,GAAGJ,gBAAgB,CAAC,CAAC;AAAEI,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAT,GAAD,KAAgCD,KAAK,CAACE,GAAN,CAAWC,EAAD,IAAQF,IAAI,CAACE,EAAD,CAAtB,CAAjC,CAA9B;AAEA,QAAMC,aAAa,GAAGL,KAAK,CAACG,GAAN,CAAWG,IAAD,iBAC9B,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAmBA,IAAI,CAACF,EAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,cAAc,EAAEE,IAAI,CAACF;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAeE,IAAI,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEJ,KAAK,CAACO,MAAN,KAAiB,CAA1C;AAA6C,MAAA,cAAc,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,aAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhBD;;GAAMN,Q;UACUH,gB;;;KADVG,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import './CellList.css';\nimport { Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport CellAdder from './CellAdder';\nimport CellListItem from './CellListItem';\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) => order.map((id) => data[id]));\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem key={cell.id} cell={cell} />\n      <CellAdder previousCellId={cell.id} />\n    </Fragment>\n  ));\n\n  return (\n    <div className='cell-list'>\n      <CellAdder forceVisible={cells.length === 0} previousCellId={null} />\n      {renderedCells}\n    </div>\n  );\n};\n\nexport default CellList;\n"]},"metadata":{},"sourceType":"module"}