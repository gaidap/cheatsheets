{"ast":null,"code":"var _jsxFileName = \"/home/pac/cheatsheets/packages/local-client/src/components/CellListItem.tsx\";\nimport './CellListItem.css';\nimport { CellType } from '../state';\nimport ActionBar from './ActionBar';\nimport CodeCell from './CodeCell';\nimport MarkdownEditor from './MarkdownEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CellListItem = ({\n  cell\n}) => {\n  let child;\n\n  if (cell.type === CellType.CODE) {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-bar-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ActionBar, {\n          id: cell.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CodeCell, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MarkdownEditor, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBar, {\n        id: cell.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/src/components/CellListItem.tsx"],"names":["CellType","ActionBar","CodeCell","MarkdownEditor","CellListItem","cell","child","type","CODE","id"],"mappings":";AAAA,OAAO,oBAAP;AACA,SAAeA,QAAf,QAA+B,UAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAMA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9D,MAAIC,KAAJ;;AACA,MAAID,IAAI,CAACE,IAAL,KAAcP,QAAQ,CAACQ,IAA3B,EAAiC;AAE/BF,IAAAA,KAAK,gBACH;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAED,IAAI,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAQD,GAVD,MAUO;AACLC,IAAAA,KAAK,gBACH;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,EAAE,EAAEA,IAAI,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAOD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cAAiCH;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBD;;KAAMF,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import './CellListItem.css';\nimport { Cell, CellType } from '../state';\nimport ActionBar from './ActionBar';\nimport CodeCell from './CodeCell';\nimport MarkdownEditor from './MarkdownEditor';\n\ninterface CellListItemProps {\n  cell: Cell;\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n  let child: JSX.Element;\n  if (cell.type === CellType.CODE) {\n    \n    child = (\n      <>\n        <div className='action-bar-wrapper'>\n          <ActionBar id={cell.id} />\n        </div>\n        <CodeCell cell={cell} />\n      </>\n    );\n  } else {\n    child = (\n      <>\n        <MarkdownEditor cell={cell} />\n        <ActionBar id={cell.id} />\n      </>\n    );\n    \n  }\n  return <div className='cell-list-item'>{child}</div>;\n};\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}