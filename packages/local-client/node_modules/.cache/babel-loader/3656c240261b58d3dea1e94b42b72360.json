{"ast":null,"code":"var _jsxFileName = \"/home/pac/cheatsheets/packages/local-client/src/components/MarkdownEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport './MarkdownEditor.css';\nimport { useEffect, useState, useRef } from 'react';\nimport MDEditor from '@uiw/react-md-editor';\nimport { useActions } from '../hooks/use-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextEditor = ({\n  cell\n}) => {\n  _s();\n\n  const divRef = useRef(null);\n  const [editing, setEditing] = useState(false);\n  const {\n    updateCell\n  } = useActions();\n  useEffect(() => {\n    const clickListener = event => {\n      const clickInsideEditor = event.target && divRef.current && divRef.current.contains(event.target);\n\n      if (clickInsideEditor) {\n        return;\n      }\n\n      setEditing(false);\n    };\n\n    document.addEventListener('click', clickListener, {\n      capture: true\n    });\n\n    const keyListener = event => {\n      if (event.code === 'Escape') {\n        setEditing(false);\n      }\n    };\n\n    document.addEventListener('keyup', keyListener, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener('click', clickListener, {\n        capture: true\n      });\n      document.removeEventListener('keyup', keyListener, {\n        capture: true\n      });\n    };\n  }, []);\n\n  if (editing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-editor\",\n      ref: divRef,\n      children: /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: cell.content,\n        onChange: content => {\n          updateCell(cell.id, content || '');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"markdown-editor card\",\n    onClick: () => setEditing(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n        source: cell.content || '# Click to edit.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextEditor, \"UwddyngmQAn2PPBMZSlObxiLadI=\", false, function () {\n  return [useActions];\n});\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/src/components/MarkdownEditor.tsx"],"names":["useEffect","useState","useRef","MDEditor","useActions","TextEditor","cell","divRef","editing","setEditing","updateCell","clickListener","event","clickInsideEditor","target","current","contains","document","addEventListener","capture","keyListener","code","removeEventListener","content","id"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;;;AAMA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC1D,QAAMC,MAAM,GAAGL,MAAM,CAAwB,IAAxB,CAArB;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAGS,IAAAA;AAAH,MAAmBN,UAAU,EAAnC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,aAAa,GAAIC,KAAD,IAAuB;AAC3C,YAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,IAAgBP,MAAM,CAACQ,OAAvB,IAAkCR,MAAM,CAACQ,OAAP,CAAeC,QAAf,CAAwBJ,KAAK,CAACE,MAA9B,CAA5D;;AAEA,UAAID,iBAAJ,EAAuB;AACrB;AACD;;AAEDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARD;;AASAQ,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCP,aAAnC,EAAkD;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAAlD;;AAEA,UAAMC,WAAW,GAAIR,KAAD,IAA0B;AAC5C,UAAIA,KAAK,CAACS,IAAN,KAAe,QAAnB,EAA6B;AAC3BZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAJD;;AAKAQ,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCE,WAAnC,EAAgD;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAhD;AAEA,WAAO,MAAM;AACXF,MAAAA,QAAQ,CAACK,mBAAT,CAA6B,OAA7B,EAAsCX,aAAtC,EAAqD;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAArD;AACAF,MAAAA,QAAQ,CAACK,mBAAT,CAA6B,OAA7B,EAAsCF,WAAtC,EAAmD;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAnD;AACD,KAHD;AAID,GAvBQ,EAuBN,EAvBM,CAAT;;AAyBA,MAAIX,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAED,MAAtC;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAED,IAAI,CAACiB,OADd;AAEE,QAAA,QAAQ,EAAGA,OAAD,IAAa;AACrBb,UAAAA,UAAU,CAACJ,IAAI,CAACkB,EAAN,EAAUD,OAAO,IAAI,EAArB,CAAV;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,OAAO,EAAE,MAAMd,UAAU,CAAC,IAAD,CAA/D;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,MAAM,EAAEH,IAAI,CAACiB,OAAL,IAAgB;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjDD;;GAAMlB,U;UAGqBD,U;;;KAHrBC,U;AAmDN,eAAeA,UAAf","sourcesContent":["import './MarkdownEditor.css';\nimport { useEffect, useState, useRef } from 'react';\nimport MDEditor from '@uiw/react-md-editor';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/use-actions';\n\ninterface TextEditorProps {\n  cell: Cell;\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({ cell }) => {\n  const divRef = useRef<HTMLDivElement | null>(null);\n  const [editing, setEditing] = useState(false);\n  const {  updateCell  } = useActions();\n\n  useEffect(() => {\n    const clickListener = (event: MouseEvent) => {\n      const clickInsideEditor = event.target && divRef.current && divRef.current.contains(event.target as Node);\n\n      if (clickInsideEditor) {\n        return;\n      }\n\n      setEditing(false);\n    };\n    document.addEventListener('click', clickListener, { capture: true });\n\n    const keyListener = (event: KeyboardEvent) => {\n      if (event.code === 'Escape') {\n        setEditing(false);\n      }\n    };\n    document.addEventListener('keyup', keyListener, { capture: true });\n\n    return () => {\n      document.removeEventListener('click', clickListener, { capture: true });\n      document.removeEventListener('keyup', keyListener, { capture: true });\n    };\n  }, []);\n\n  if (editing) {\n    return (\n      <div className='markdown-editor' ref={divRef}>\n        <MDEditor\n          value={cell.content}\n          onChange={(content) => {\n            updateCell(cell.id, content || '');\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <div className='markdown-editor card' onClick={() => setEditing(true)}>\n      <div className='card-content'>\n        <MDEditor.Markdown source={cell.content || '# Click to edit.'} />\n      </div>\n    </div>\n  );\n};\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}