{"ast":null,"code":"import produce from 'immer';\nimport { ActionType } from '../action-types';\nconst initialState = {};\nconst reducer = produce((state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.BUNDLE_START:\n      state[action.payload.id] = {\n        loading: true,\n        code: '',\n        error: ''\n      };\n      return state;\n\n    case ActionType.BUNDLE_COMPLETE:\n      state[action.payload.id] = {\n        loading: false,\n        code: action.payload.bundle.code,\n        error: action.payload.bundle.error\n      };\n      return state;\n\n    default:\n      return state;\n  }\n});\nexport default reducer;","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/src/state/reducers/bundles-reducer.ts"],"names":["produce","ActionType","initialState","reducer","state","action","type","BUNDLE_START","payload","id","loading","code","error","BUNDLE_COMPLETE","bundle"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAaA,MAAMC,YAAyB,GAAG,EAAlC;AAEA,MAAMC,OAAO,GAAGH,OAAO,CACrB,CAACI,KAAkB,GAAGF,YAAtB,EAAoCG,MAApC,KAAoE;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,UAAU,CAACM,YAAhB;AACEH,MAAAA,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,CAAL,GAA2B;AACzBC,QAAAA,OAAO,EAAE,IADgB;AAEzBC,QAAAA,IAAI,EAAE,EAFmB;AAGzBC,QAAAA,KAAK,EAAE;AAHkB,OAA3B;AAKA,aAAOR,KAAP;;AACF,SAAKH,UAAU,CAACY,eAAhB;AACET,MAAAA,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,CAAL,GAA2B;AACzBC,QAAAA,OAAO,EAAE,KADgB;AAEzBC,QAAAA,IAAI,EAAEN,MAAM,CAACG,OAAP,CAAeM,MAAf,CAAsBH,IAFH;AAGzBC,QAAAA,KAAK,EAAEP,MAAM,CAACG,OAAP,CAAeM,MAAf,CAAsBF;AAHJ,OAA3B;AAKA,aAAOR,KAAP;;AACF;AACE,aAAOA,KAAP;AAhBJ;AAkBD,CApBoB,CAAvB;AAuBA,eAAeD,OAAf","sourcesContent":["import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface BundleState {\n  [key: string]:\n    | {\n        loading: boolean;\n        code: string;\n        error: string;\n      }\n    | undefined;\n}\n\nconst initialState: BundleState = {};\n\nconst reducer = produce(\n  (state: BundleState = initialState, action: Action): BundleState => {\n    switch (action.type) {\n      case ActionType.BUNDLE_START:\n        state[action.payload.id] = {\n          loading: true,\n          code: '',\n          error: '',\n        };\n        return state;\n      case ActionType.BUNDLE_COMPLETE:\n        state[action.payload.id] = {\n          loading: false,\n          code: action.payload.bundle.code,\n          error: action.payload.bundle.error,\n        };\n        return state;\n      default:\n        return state;\n    }\n  }\n);\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}