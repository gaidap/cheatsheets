{"ast":null,"code":"import * as esbuild from 'esbuild-wasm';\nimport { fetchPkgPlugin } from './plugins/fetchpkg-plugin';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nlet service;\n\nconst bundle = async rawCode => {\n  // init esbuild service for bundling on demand\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n    });\n  }\n\n  try {\n    const result = await service.build({\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window'\n      },\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPkgPlugin(rawCode)],\n      jsxFactory: '__React__.createElement',\n      jsxFragment: '__React__.Fragment'\n    });\n    return {\n      code: result.outputFiles[0].text,\n      error: ''\n    };\n  } catch (error) {\n    return {\n      code: '',\n      error: error.message\n    };\n  }\n};\n\nexport default bundle;","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/src/bundler/index.ts"],"names":["esbuild","fetchPkgPlugin","unpkgPathPlugin","service","bundle","rawCode","startService","worker","wasmURL","result","build","define","global","entryPoints","write","plugins","jsxFactory","jsxFragment","code","outputFiles","text","error","message"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,IAAIC,OAAJ;;AAEA,MAAMC,MAAM,GAAG,MAAOC,OAAP,IAA2B;AACxC;AACA,MAAG,CAACF,OAAJ,EAAa;AACXA,IAAAA,OAAO,GAAG,MAAMH,OAAO,CAACM,YAAR,CAAqB;AACnCC,MAAAA,MAAM,EAAE,IAD2B;AAEnCC,MAAAA,OAAO,EAAE;AAF0B,KAArB,CAAhB;AAID;;AAED,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMN,OAAO,CAACO,KAAR,CAAc;AACjCC,MAAAA,MAAM,EAAE;AAAE,gCAAwB,cAA1B;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OADyB;AAEjCC,MAAAA,WAAW,EAAE,CAAC,UAAD,CAFoB;AAGjCT,MAAAA,MAAM,EAAE,IAHyB;AAIjCU,MAAAA,KAAK,EAAE,KAJ0B;AAKjCC,MAAAA,OAAO,EAAE,CAACb,eAAe,EAAhB,EAAoBD,cAAc,CAACI,OAAD,CAAlC,CALwB;AAMjCW,MAAAA,UAAU,EAAE,yBANqB;AAOjCC,MAAAA,WAAW,EAAE;AAPoB,KAAd,CAArB;AAUA,WAAO;AACLC,MAAAA,IAAI,EAACT,MAAM,CAACU,WAAP,CAAmB,CAAnB,EAAsBC,IADtB;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID,GAfD,CAeE,OAAOA,KAAP,EAAc;AACd,WAAO;AACLH,MAAAA,IAAI,EAAC,EADA;AAELG,MAAAA,KAAK,EAAEA,KAAK,CAACC;AAFR,KAAP;AAID;AACF,CA9BD;;AAgCA,eAAelB,MAAf","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport { fetchPkgPlugin } from './plugins/fetchpkg-plugin';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\n\nlet service: esbuild.Service;\n\nconst bundle = async (rawCode: string) => {\n  // init esbuild service for bundling on demand\n  if(!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    });\n  }\n  \n  try {\n    const result = await service.build({\n      define: { 'process.env.NODE_ENV': '\"production\"', global: 'window' },\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPkgPlugin(rawCode)],\n      jsxFactory: '__React__.createElement',\n      jsxFragment: '__React__.Fragment',\n    });\n\n    return {\n      code:result.outputFiles[0].text, \n      error: ''\n    };\n  } catch (error) {\n    return {\n      code:'', \n      error: error.message\n    }; \n  }\n};\n\nexport default bundle;"]},"metadata":{},"sourceType":"module"}