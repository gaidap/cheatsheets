{"ast":null,"code":"export const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n\n    setup(build) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          path: 'index.js',\n          namespace: 'a'\n        };\n      }); // Handle modules with relative paths\n\n      build.onResolve({\n        filter: /^\\.+\\//\n      }, args => {\n        return {\n          namespace: 'a',\n          // final forward slash is important to get correct relative path to importer\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href\n        };\n      }); // Handle modules main file\n\n      build.onResolve({\n        filter: /.*/\n      }, async args => {\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`\n        };\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/home/pac/cheatsheets/packages/local-client/src/bundler/plugins/unpkg-path-plugin.ts"],"names":["unpkgPathPlugin","name","setup","build","onResolve","filter","path","namespace","args","URL","resolveDir","href"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAM;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,mBADD;;AAELC,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAChC;AACAA,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAhB,EAA2C,MAAM;AAC/C,eAAO;AAAEC,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,SAAS,EAAE;AAA/B,SAAP;AACD,OAFD,EAFgC,CAMhC;;AACAJ,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAhB,EAAqCG,IAAD,IAAe;AACjD,eAAO;AACLD,UAAAA,SAAS,EAAE,GADN;AAEL;AACAD,UAAAA,IAAI,EAAE,IAAIG,GAAJ,CAAQD,IAAI,CAACF,IAAb,EAAmB,sBAAsBE,IAAI,CAACE,UAA3B,GAAwC,GAA3D,EAAgEC;AAHjE,SAAP;AAKD,OAND,EAPgC,CAehC;;AACAR,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAkC,MAAOG,IAAP,IAAqB;AACrD,eAAO;AACLD,UAAAA,SAAS,EAAE,GADN;AAELD,UAAAA,IAAI,EAAG,qBAAoBE,IAAI,CAACF,IAAK;AAFhC,SAAP;AAID,OALD;AAMD;;AAxBI,GAAP;AA0BD,CA3BM","sourcesContent":["import * as esbuild from 'esbuild-wasm';\n\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({filter: /(^index\\.js$)/}, () => {\n        return { path: 'index.js', namespace: 'a' };\n      });\n\n      // Handle modules with relative paths\n      build.onResolve({filter: /^\\.+\\//}, (args: any) => {\n        return {\n          namespace: 'a',\n          // final forward slash is important to get correct relative path to importer\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href \n        };\n      });\n\n      // Handle modules main file\n      build.onResolve({ filter: /.*/ }, async (args: any) => {      \n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`\n        };\n      });    \n    },\n  };\n};"]},"metadata":{},"sourceType":"module"}