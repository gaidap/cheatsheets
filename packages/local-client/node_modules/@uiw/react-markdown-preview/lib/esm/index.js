import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import _createForOfIteratorHelper from "@babel/runtime/helpers/esm/createForOfIteratorHelper";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React, { Component } from 'react';
import Prism from 'prismjs';
import 'prismjs/components/prism-markup';
import ReactMarkdown, { ReactMarkdownProps } from 'react-markdown';
import allowNode from './allowNode';
import { loadLang } from './langs';
import "./styles/markdown.css";
import "./styles/markdowncolor.css";

var MarkdownPreview = /*#__PURE__*/function (_Component) {
  _inherits(MarkdownPreview, _Component);

  var _super = _createSuper(MarkdownPreview);

  function MarkdownPreview(props) {
    var _this;

    _classCallCheck(this, MarkdownPreview);

    _this = _super.call(this, props);
    _this.mdp = /*#__PURE__*/React.createRef();
    _this.loadedLang = ['markup'];
    _this.state = {
      value: '' || props.source
    };
    return _this;
  }

  _createClass(MarkdownPreview, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.highlight();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      if (this.props.source !== prevProps.source) {
        this.setState({
          value: this.props.source
        }, function () {
          _this2.highlight();
        });
      }
    }
  }, {
    key: "renderHTML",
    value: function renderHTML(mdStr) {
      var _this3 = this;

      this.setState({
        value: mdStr
      }, function () {
        _this3.highlight();
      });
    }
  }, {
    key: "highlight",
    value: function () {
      var _highlight = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var codes, _iterator, _step, value, tag, lang;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.mdp.current) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return");

              case 2:
                codes = this.mdp.current.getElementsByTagName('code');
                _iterator = _createForOfIteratorHelper(codes);
                _context.prev = 4;

                _iterator.s();

              case 6:
                if ((_step = _iterator.n()).done) {
                  _context.next = 24;
                  break;
                }

                value = _step.value;
                tag = value.parentNode;

                if (!(tag && tag.tagName === 'PRE' && /^language-/.test(value.className.trim()))) {
                  _context.next = 22;
                  break;
                }

                lang = value.className.trim().replace(/^language-/, '');
                _context.prev = 11;

                if (this.loadedLang.includes(lang)) {
                  _context.next = 16;
                  break;
                }

                this.loadedLang.push(lang);
                _context.next = 16;
                return loadLang(lang);

              case 16:
                _context.next = 18;
                return Prism.highlightElement(value);

              case 18:
                _context.next = 22;
                break;

              case 20:
                _context.prev = 20;
                _context.t0 = _context["catch"](11);

              case 22:
                _context.next = 6;
                break;

              case 24:
                _context.next = 29;
                break;

              case 26:
                _context.prev = 26;
                _context.t1 = _context["catch"](4);

                _iterator.e(_context.t1);

              case 29:
                _context.prev = 29;

                _iterator.f();

                return _context.finish(29);

              case 32:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[4, 26, 29, 32], [11, 20]]);
      }));

      function highlight() {
        return _highlight.apply(this, arguments);
      }

      return highlight;
    }()
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          style = _this$props.style,
          onScroll = _this$props.onScroll,
          onMouseOver = _this$props.onMouseOver,
          other = _objectWithoutProperties(_this$props, ["className", "style", "onScroll", "onMouseOver"]);

      var cls = "wmde-markdown wmde-markdown-color ".concat(className || '');
      return /*#__PURE__*/React.createElement("div", {
        ref: this.mdp,
        onScroll: onScroll,
        style: style,
        onMouseOver: onMouseOver,
        className: cls
      }, /*#__PURE__*/React.createElement(ReactMarkdown, _extends({
        escapeHtml: false,
        allowNode: allowNode
      }, other, {
        source: this.state.value
      })));
    }
  }]);

  return MarkdownPreview;
}(Component);

MarkdownPreview.defaultProps = {
  renderers: {}
};
export { MarkdownPreview as default }; 
//# sourceMappingURL=index.js.map